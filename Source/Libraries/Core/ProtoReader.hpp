#pragma once
#include <string>
#include <map>
#include <vector>
#include "Tables.hpp"

using EnumDictionary = std::map<std::string, uint8_t>;
using NestedEnumDictionary = std::map<uint8_t, EnumDictionary>;

enum EItemProtoStructure : uint16_t
{
	ITEM_VNUM,
	ITEM_NAME,
	ITEM_TYPE,
	ITEM_SUBTYPE,
	SLOT_HEIGHT,
	ANTIFLAGS,
	FLAGS,
	WEARFLAGS,
	IMMUNEFLAGS,
	GOLD,
	SHOP_BUY_PRICE,
	REFINED_VNUM,
	REFINESET,
	ALTER_TO_MAGIC_ITEM_PERCENT,
	LIMIT_TYPE0,
	LIMIT_VALUE0,
	LIMIT_TYPE1,
	LIMIT_VALUE1,
	APPLY_TYPE0,
	APPLY_VALUE0,
	APPLY_TYPE1,
	APPLY_VALUE1,
	APPLY_TYPE2,
	APPLY_VALUE2,
	VALUE0,
	VALUE1,
	VALUE2,
	VALUE3,
	VALUE4,
	VALUE5,
	SPECULAR,
	GAIN_SOCKET_PERCENT,
	ADDON_TYPE,

	ITEM_PROTO_MAX_TOKEN
};

enum EMobProtoStructure : uint8_t
{
	MOB_VNUM,
	MOB_NAME,
	MOB_RANK,
	MOB_TYPE,
	BATTLE_TYPE,
	LEVEL,
	MOB_SIZE,
	AI_FLAG,
	MOUNT_CAPACITY,
	RACE_FLAG,
	IMMUNE_FLAG,
	EMPIRE,
	FOLDER,
	ON_CLICK,
	ST,
	DX,
	HT,
	IQ,
	DAMAGE_MIN,
	DAMAGE_MAX,
	MAX_HP,
	REGEN_CYCLE,
	REGEN_PERCENT,
	MOB_GOLD_MIN,
	MOB_GOLD_MAX,
	EXP,
	DEF,
	ATTACK_SPEED,
	MOVE_SPEED,
	AGGRESSIVE_HP_PCT,
	AGGRESSIVE_SIGHT,
	ATTACK_RANGE,
	DROP_ITEM,
	RESURRECTION_VNUM,
	ENCHANT_CURSE,
	ENCHANT_SLOW,
	ENCHANT_POISON,
	ENCHANT_STUN,
	ENCHANT_CRITICAL,
	ENCHANT_PENETRATE,
	RESIST_SWORD,
	RESIST_TWOHAND,
	RESIST_DAGGER,
	RESIST_BELL,
	RESIST_FAN,
	RESIST_BOW,
	RESIST_FIRE,
	RESIST_ELECT,
	RESIST_MAGIC,
	RESIST_WIND,
	RESIST_POISON,
	DAM_MULTIPLY,
	SUMMON,
	DRAIN_SP,
	MOB_COLOR,
	POLYMORPH_ITEM,
	SKILL_LEVEL0,
	SKILL_VNUM0,
	SKILL_LEVEL1,
	SKILL_VNUM1,
	SKILL_LEVEL2,
	SKILL_VNUM2,
	SKILL_LEVEL3,
	SKILL_VNUM3,
	SKILL_LEVEL4,
	SKILL_VNUM4,
	SP_BERSERK,
	SP_STONESKIN,
	SP_GODSPEED,
	SP_DEATHBLOW,
	SP_REVIVE,

	MOB_PROTO_MAX_TOKEN
};

bool ReadItemProto(std::vector<std::string>& tokens, TItemTable& table);
bool ReadMobProto(std::vector<std::string>& tokens, TMobTable& table);